name: Build libGDX Linux aarch64 Natives

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU for aarch64
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Generate libGDX project
        uses: addnab/docker-run-action@v3
        with:
          image: debian:bookworm
          options: |
            --platform linux/arm64
            --volume ${{ github.workspace }}:/project
          run: |
            apt-get update -y
            apt-get install -y wget openjdk-17-jdk xvfb libgl1-mesa-glx
            wget https://github.com/libgdx/gdx-liftoff/releases/download/v1.13.1.4/gdx-liftoff-1.13.1.4.jar -O gdx-liftoff.jar
            # Run with Xvfb virtual display
            xvfb-run -a java -jar gdx-liftoff.jar --dir myproject --name MyProject --package com.myproject --mainClass Main --mods desktop --mods core

      - name: Configure build.gradle
        run: |
          cd myproject
          sed -i "1i buildscript { repositories { mavenCentral() }; dependencies { classpath 'com.badlogicgames.gdx:gdx-jnigen-gradle:2.3.1' } }" build.gradle
          echo -e "\napply plugin: 'com.badlogicgames.gdx.gdx-jnigen'\njnigen { add(Linux, 64, ARM) }" >> build.gradle

      - name: Build natives
        uses: addnab/docker-run-action@v3
        with:
          image: debian:bookworm
          options: |
            --platform linux/arm64
            --volume ${{ github.workspace }}/myproject:/build
          run: |
            apt-get update -y
            apt-get install -y openjdk-17-jdk gradle g++-aarch64-linux-gnu
            cd /build
            ./gradlew jnigen jnigenBuildLinuxArm_64 -Ptarget=linux-arm64

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: libgdx-linux-aarch64
          path: |
            myproject/build/libs/linux-arm64/*
            myproject/build/jni/linux-arm64/*
